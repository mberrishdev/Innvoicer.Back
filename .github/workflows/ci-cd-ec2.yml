name: Deploy to EC2

on:
  push:
    branches:
      - master
  workflow_dispatch:
      
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Debug Secrets
        run: |
          echo "AWS_ACCESS_KEY_ID is set: ${{ secrets.AWS_ACCESS_KEY_ID}}"
          echo "AWS_SECRET_ACCESS_KEY is set: ${{ secrets.AWS_SECRET_ACCESS_KEY}}"
          echo "AWS_REGION is set: ${{ secrets.AWS_REGION  }}"
          echo "EC2_SSH_KEY is set: ${{ secrets.EC2_SSH_KEY }}"
          echo "EC2_HOST is set: ${{ secrets.EC2_HOST }}"

      - name: Log in to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 832753618517.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          docker build -t innvoicer-api-prod .
          docker tag innvoicer-api-prod:latest 832753618517.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/innvoicer-api-prod
          docker push 832753618517.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/innvoicer-api-prod

      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to EC2 using Instance Connect
        run: |
            # Set up the temporary SSH key
            aws ec2-instance-connect send-ssh-public-key \
              --region eu-central-1 \
              --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
              --instance-os-user ubuntu \
              --availability-zone ${{ secrets.AWS_AVAILABILITY_ZONE }} \
              --ssh-public-key file://$HOME/.ssh/id_rsa.pub
  
            # Execute commands over SSH using EC2 Instance Connect
            ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
              # Log in to ECR on EC2
              aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 832753618517.dkr.ecr.eu-central-1.amazonaws.com
  
              # Stop and remove existing container (if running)
              docker stop innvoicer-api-prod || true
              docker rm innvoicer-api-prod || true
  
              # Pull latest image
              docker pull 832753618517.dkr.ecr.eu-central-1.amazonaws.com/innvoicer-api-prod:latest
  
              # Run new container
              docker run -d -p 8080:8080 --name innvoicer-api-prod 832753618517.dkr.ecr.eu-central-1.amazonaws.com/innvoicer-api-prod:latest
  
              # Cleanup old images
              docker system prune -f
            EOF
